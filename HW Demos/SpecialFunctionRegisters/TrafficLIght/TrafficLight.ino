// C++ code
//
#define REG_DDR_LED_RED DDRH
#define REG_PORT_LED_RED PORTH
#define REG_PIN_LED_RED PINH
#define BIT_LED_RED 3

#define REG_DDR_LED_YELLOW DDRE
#define REG_PORT_LED_YELLOW PORTE
#define REG_PIN_LED_YELLOW PINE
#define BIT_LED_YELLOW 3

#define REG_DDR_LED_GREEN DDRG
#define REG_PORT_LED_GREEN PORTG
#define REG_PIN_LED_GREEN PING
#define BIT_LED_GREEN 5

#define REG_DDR_PUSHBUTTON DDRE
#define REG_PORT_PUSHBUTTON PORTE
#define REG_PIN_PUSHBUTTON PINE
#define BIT_PUSHBUTTON 4

void setup()
{
  REG_DDR_LED_RED |= _BV(BIT_LED_RED);
  REG_DDR_LED_YELLOW |= _BV(BIT_LED_YELLOW);
  REG_DDR_LED_GREEN |= _BV(BIT_LED_GREEN);
  REG_DDR_PUSHBUTTON &= ~_BV(BIT_PUSHBUTTON);
  REG_PORT_PUSHBUTTON &= ~_BV(BIT_PUSHBUTTON);
}

void loop()
{
  if (((REG_PIN_PUSHBUTTON >> BIT_PUSHBUTTON) & 0x01)==1) {
    REG_PORT_LED_RED &= ~_BV(BIT_LED_RED);
    REG_PORT_LED_YELLOW &= ~_BV(BIT_LED_YELLOW);
    REG_PORT_LED_GREEN |= _BV(BIT_LED_GREEN);
    delay(2000); // Wait for 2000 millisecond(s)
    REG_PORT_LED_RED &= ~_BV(BIT_LED_RED);
    REG_PORT_LED_YELLOW |= _BV(BIT_LED_YELLOW);
    REG_PORT_LED_GREEN &= ~_BV(BIT_LED_GREEN);
    delay(500); // Wait for 500 millisecond(s)
  }
    REG_PORT_LED_RED |= _BV(BIT_LED_RED);
    REG_PORT_LED_YELLOW &= ~_BV(BIT_LED_YELLOW);
    REG_PORT_LED_GREEN &= ~_BV(BIT_LED_GREEN);
}